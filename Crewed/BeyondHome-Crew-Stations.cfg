CONTRACT_TYPE
{
    name = BeyondHome-Crew-Stations
    title = Build a new Space Station around @/nextBody
	genericTitle = Build a new Space Station
    group = BHcrew
	description = Here at KSC we like to think we are always open to exploring new frontiers. With this in mind, we want you to head out to @/nextBody and see what we can see.
    genericDescription = Land on a celestial body, to see what we can see.
    synopsis = h
    completedMessage = Huzzah! There is no such thing as the final frontier.
    minExpiry = 1
    maxExpiry = 7
    deadline = 0
    cancellable = true
    declinable = true
    prestige = Exceptional
    targetBody = @/nextBody
    maxSimultaneous = 1
    rewardScience = 10
    rewardReputation = 5.0
    rewardFunds = 96000.0
    failureReputation = 0.0
    failureFunds = 0.0
    advanceFunds = 0.0
    
	DATA
	{
		type = List<Vessel>
		hidden = true
		stations = AllVessels().Where(v => v.VesselType() == Station)
	}
	
	DATA
	{
		type = CelestialBody
		requiredValue = true
		uniquenessCheck = GROUP_ACTIVE
		nextBody = OrbitedBodies().Where(body => @/stations.Where(v => v.CelestialBody() == body).Count() == 0).SelectUnique()
		title = next body
	}
	
	
	PARAMETER
	{
		name = StationDefine
		type = VesselParameterGroup
		title = Launch a new Station into the specified orbit around @/nextBody.
		notes = This station must include 
		
		PARAMETER
		{
			name = OrbitCheck
			type = Orbit
			targetBody = @/nextBody
			situation = ORBITING
			maxAltitude = @/nextBody.SpaceAltitudeThreshold()
		}
		PARAMETER
		{
			name = PartValidationDocking
			type = PartValidation
			partModule = ModuleDockingNode
			minCount = 1
		}
		PARAMETER
		{
			name = PartValidationCrewCapacity
			type = HasCrewCapacity
			title = Support 3 Kerbals
			minCapacity = 3
		}
		PARAMETER
		{
			name = PartValidationPower
			type = Any
			
			PARAMETER
			{
				name = PartValidationRTG
				type = PartValidation
				title = 1 or more generators 
				partModule = ModuleGenerator
				minCount = 1
			}
			PARAMETER
			{
				name = PartValidationSolar
				type = PartValidation
				title = 1 or more Solar Panels
				partModule = KopernicusSolarPanels
				minCount = 1
			}
			PARAMETER:NEEDS[NearFutureSolar]
			{
				name = PartValidationCurvedSolar
				type = PartValidation
				title = 1 or more curved solar panels
				partModule = ModuleCurvedSolarPanel
				minCount = 1
			}
			PARAMETER:NEEDS[NearFutureElectrical]
			{
				name = PartValidationNFReactor
				type = PartValidation
				title = 1 or more fission reactors
				partModule = FissionReactor
				minCount = 1
			}
			PARAMETER:NEEDS[NearFutureElectrical]
			{
				name = PartValidationNFRTG
				type = PartValidation
				title = 1 or more Radioisotope Generators
				partModule = ModuleradioisotopeGenerator
				minCount = 1
			}
		}
		PARAMETER
		{
			name = PartValidationComms
			type = Any
			
			PARAMETER
			{
				name = PartValidationStockComms
				type = PartValidation
				title = 1 or more antennas 
				partModule = ModuleDataTransmitter
				minCount = 1
			}
			PARAMETER:NEEDS[NearFutureExploration]
			{
				name = PartValidationNFXComms
				type = PartValidation
				title = 1 or more Antenna Feeds
				partModule = ModuleAntennaFeed
				minCount = 1
			}
		}
	}
	REQIREMENT
	{
		name = PortsUnlocked
		type = PartModuleUnlocked
		partModule = ModuleDockingNode
	}
	
	REQUIREMENT
	{
		name = ReturnCrewFromOrbit
		type = ReturnFromOrbit
		checkType = Manned
		targetBody = Kerbin
	}
	
	REQUIREMENT
	{
		name = OrbitBody
		type = Orbit
		targetBody = @/nextBody
	}
}