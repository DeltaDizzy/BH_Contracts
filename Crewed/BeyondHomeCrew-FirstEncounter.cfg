CONTRACT_TYPE
{
    name = BeyondHome-CrewFirstEncounter
    title = Send a crew to @/nextBody
	genericTitle = Send a crew to a Celestial Body
    group = BHcrew
	description = Here at KSC we like to think we are always open to exploring new frontiers. With this in mind, we want you to head out to @/nextBody and see what we can see.
    genericDescription = Head to a new celestial body, to see what we can see.
    synopsis = Send a crew to @/nextBody
    completedMessage = Huzzah! There is no such thing as the final frontier.
    minExpiry = 1
    maxExpiry = 7
    deadline = 0
    cancellable = true
    declinable = true
    prestige = Exceptional
    targetBody = @/nextBody
    maxSimultaneous = 3
    rewardScience = 4
    rewardReputation = 6.7
    rewardFunds = 64000.0
    failureReputation = 0.0
    failureFunds = 0 
    advanceFunds = 0
	
	DATA
	{
		type = List<CelestialBody>
		bodyList = [ Lua, Armstrong, Ash, Hydrus, Hydron, Scaythe, Scindo, Gateway, Eidos, Ansia, Jade, Proxim, Kohm, Anger, Rock, Fury, Vasto ]
		hidden = true
	}
	
	DATA
	{
		type = CelestialBody
		nextBody = @/bodyList.Where(body => body)
	}

	PARAMETER
	{
		name = Any
		type = Any
		title = Fly by or Orbit @/nextBody
		PARAMETER
		{
			name = FlybyDefine
			type = VesselParameterGroup
			define = Flyby
			hideVesselName = true
			dissassociateVesselsOnContractCompletion = true
		
			PARAMETER
			{
				name = ReachState
				type = ReachState
				situation = ESCAPING
				title = Fly by @/nextBody
				disableOnStateChange = false
			}
		}
		PARAMETER
		{
			name = OrbitDefine
			type = VesselParameterGroup
			duration = 10s
			define = Orbit
			hideVesselName = true
			dissassociateVesselsOnContractCompletion = true
			PARAMETER
			{
				name = ReachState
				type = ReachState
				situation = ORBITING
				title = Orbit @/nextBody
				disableOnStateChange = false
			}
		}
	}
	
	PARAMETER
	{
		name = HasCrew
		type = HasCrew
		minCrew = 1
	}
	
    REQUIREMENT
    {
        name = ReachOrbit
        type = Orbit
		targetBody = HomeWorld()
		title = Must have reached orbit for the first time.
    }
