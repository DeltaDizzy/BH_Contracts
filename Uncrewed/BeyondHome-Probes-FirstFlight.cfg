CONTRACT_TYPE
{
    name = BeyondHome-FirstFlight
    title = Reach for the Stars
	genericTitle = Reach for the Stars
    group = BHprobes
	description = It's about time we figured out this whole "rocketry" thing.
    synopsis = Start a space program
    completedMessage = So thats how its done... Well done! Now to get down to business!
    minExpiry = 1
    maxExpiry = 7
    deadline = 0
	maxCompletions = 1
    cancellable = true
    declinable = true
    prestige = Exceptional
    targetBody = @/homeworld
    rewardScience = 6.6
    rewardReputation = 13.3
    rewardFunds = 70400.00
    failureReputation = 0.0
    failureFunds = 0.0
    advanceFunds = 0.0
	
	DATA
	{
		type = CelestialBody
		homeworld = HomeWorld()
	}

	PARAMETER
	{
		name = CollectScience
		type = CollectScience
		recoveryMethod = RecoverOrTransmit
		title = Return our first piece of scientific data.
	}
	
	REQUIREMENT
	{
		name = Firstlaunch
		type = FirstLaunch
		invertRequirement = true
	}
}

CONTRACT_TYPE
{
    name = BeyondHome-FirstOrbit
    title = Orbit Rhode
	genericTitle = Orbit Rhode
    group = BHprobes
	description = It's time to enter orbit, the halfway point to anywhere!    
	synopsis = Enter orbit around Rhode.
    completedMessage = By this logic, we could be at Lua in just a few more minutes. Let's get cracking!
    minExpiry = 1
    maxExpiry = 7
    deadline = 0
	maxCompletions = 1
    cancellable = true
    declinable = true
    prestige = Exceptional
    targetBody = @/homeworld
    rewardScience = 6.6
    rewardReputation = 13.3
    rewardFunds = 70400.00
    failureReputation = 0.0
    failureFunds = 0.0
    advanceFunds = 0.0
	
	DATA
	{
		type = CelestialBody
		homeworld = HomeWorld()
	}
	
	// should probably make this a VesselParameterGroup tbh
	PARAMETER
	{
		name = ReachState
		type = ReachState
		targetBody = @/homeworld
		situation = ORBITING
		title = Enter orbit around Rhode
		disableOnStateChange = true
	}
	
	PARAMETER
	{
		name = Duration
		type = Duration
		duration = 10s
		preWaitText = before the timer starts
		waitingText = while timer runs
		completionText = after timer finishes
		startCriteria = PARAMETER_COMPLETION
		parameter = ReachState
	}
	
	REQUIREMENT
	{
		name = ReachSpace
		type = ReachSpace
		title = Must have reached Space
	}
}