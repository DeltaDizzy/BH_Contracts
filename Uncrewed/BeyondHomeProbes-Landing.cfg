CONTRACT_TYPE
{
    name = BeyondHome-Probes-Landing
    title = Land on @/nextBody
	genericTitle = Land on a Celestial Body
    group = BHprobes
	description = Here at KSC we like to think we are always open to exploring new frontiers. With this in mind, we want you to head out to @/nextBody and see what we can see.
    genericDescription = Land on a celestial body, to see what we can see.
    synopsis = Continue exploring @/nextBody
    completedMessage = Huzzah! There is no such thing as the final frontier.
    minExpiry = 1
    maxExpiry = 7
    deadline = 0
    cancellable = true
    declinable = true
    prestige = Exceptional
    targetBody = @/nextBody
    maxSimultaneous = 1
    rewardScience = 10
    rewardReputation = 5.0
    rewardFunds = 96000.0
    failureReputation = 0.0
    failureFunds = 0.0
    advanceFunds = 0.0
	
	DATA
	{
		title = next body
		type = CelestialBody
		uniquenessCheck = CONTRACT_ACTIVE
		nextBody = [ Armstrong, Lua, Ash, Hydron, Hydrus, Scindo, Scaythe, Eidos, Ansia, Jade, Proxim, Kohm, Gateway, Anger, Voss, Vasto, Rock, Fury].Where(b => (b.HaveOrbited() == true || b.HaveEscaped() == true) && b.HaveLandedOn() == false).SelectUnique()
	}
	
	DATA
	{
		hidden = true
		type = List<Biome>
		bodyBiomes = @/nextBody.Biomes()
	}

	
	PARAMETER
	{
		name = 3biomes
		type = AtLeast
		count = 3
		PARAMETER
		{
			name = ReachState
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			disableOnStateChange = true
			title = Land on @/nextBody
			ITERATOR
			{
				type = Biome
				biome = @/bodyBiomes
			}
		}
	}
	
    REQUIREMENT
    {
        name = Landed
        type = Landing
		targetBody = @/nextBody
		invertRequirement = true
		title = Must not have landed on the target body.
    }
	
	REQUIREMENT
	{
		name = SplashDown
		type = SplashDown
		targetBody = @/nextBody
		invertRequirement = true
		title = Must not have splashed down on the target body.
	}